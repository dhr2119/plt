
/*
    Vector Functions
*/

    int doti2(vector int [2] v1, vector int [2] v2) {
        int i;
        int sum;
        sum = 0;
        for(i=0; i<v1:len;++i) {
            sum = sum + v1[i]*v2[i];
        }
        return sum;
    }

    int doti3(vector int [3] v1, vector int [3] v2) {
        int i;
        int sum;
        sum = 0;
        for(i=0; i<v1:len;++i) {
            sum = sum + v1[i]*v2[i];
        }
        return sum;
    }

    int doti4(vector int [4] v1, vector int [4] v2) {
        int i;
        int sum;
        sum = 0;
        for(i=0; i<v1:len;++i) {
            sum = sum + v1[i]*v2[i];
        }
        return sum;
    }

    int doti5(vector int [5] v1, vector int [5] v2) {
        int i;
        int sum;
        sum = 0;
        for(i=0; i<v1:len;++i) {
            sum = sum + v1[i]*v2[i];
        }
        return sum;
    }

    int doti6(vector int [6] v1, vector int [6] v2) {
        int i;
        int sum;
        sum = 0;
        for(i=0; i<v1:len;++i) {
            sum = sum + v1[i]*v2[i];
        }
        return sum;
    }

    int doti7(vector int [7] v1, vector int [7] v2) {
        int i;
        int sum;
        sum = 0;
        for(i=0; i<v1:len;++i) {
            sum = sum + v1[i]*v2[i];
        }
        return sum;
    }

    int doti8(vector int [8] v1, vector int [8] v2) {
        int i;
        int sum;
        sum = 0;
        for(i=0; i<v1:len;++i) {
            sum = sum + v1[i]*v2[i];
        }
        return sum;
    }

    int doti9(vector int [9] v1, vector int [9] v2) {
        int i;
        int sum;
        sum = 0;
        for(i=0; i<v1:len;++i) {
            sum = sum + v1[i]*v2[i];
        }
        return sum;
    }

    float dotf2(vector float [2] v1, vector float [2] v2) {
        int i;
        float sum;
        sum = 0.0;
        for(i=0; i<v1:len;++i) {
            sum = sum + v1[i]*v2[i];
        }
        return sum;
    }

    float dotf3(vector float [3] v1, vector float [3] v2) {
        int i;
        float sum;
        sum = 0.0;
        for(i=0; i<v1:len;++i) {
            sum = sum + v1[i]*v2[i];
        }
        return sum;
    }

    float dotf4(vector float [4] v1, vector float [4] v2) {
        int i;
        float sum;
        sum = 0.0;
        for(i=0; i<v1:len;++i) {
            sum = sum + v1[i]*v2[i];
        }
        return sum;
    }

    float dotf5(vector float [5] v1, vector float [5] v2) {
        int i;
        float sum;
        sum = 0.0;
        for(i=0; i<v1:len;++i) {
            sum = sum + v1[i]*v2[i];
        }
        return sum;
    }

    float dotf6(vector float [6] v1, vector float [6] v2) {
        int i;
        float sum;
        sum = 0.0;
        for(i=0; i<v1:len;++i) {
            sum = sum + v1[i]*v2[i];
        }
        return sum;
    }

    float dotf7(vector float [7] v1, vector float [7] v2) {
        int i;
        float sum;
        sum = 0.0;
        for(i=0; i<v1:len;++i) {
            sum = sum + v1[i]*v2[i];
        }
        return sum;
    }

    float dotf8(vector float [8] v1, vector float [8] v2) {
        int i;
        float sum;
        sum = 0.0;
        for(i=0; i<v1:len;++i) {
            sum = sum + v1[i]*v2[i];
        }
        return sum;
    }

    float dotf9(vector float [9] v1, vector float [9] v2) {
        int i;
        float sum;
        sum = 0.0;
        for(i=0; i<v1:len;++i) {
            sum = sum + v1[i]*v2[i];
        }
        return sum;
    }

/*
    Math Functions
*/

    int mod(int dividend, int divisor) {
        int m;
        m = dividend - dividend / divisor * divisor;
        return m;
    }

    int powi(int i, int n) {
        int k;
        int pow;
        pow = 1;
        for(k=0; k<n; ++k) {
            pow = pow*i;
        }
        return pow;
    }

    float powf(float f, int n) {
        int k;
        float pow;
        pow = 1.0;
        for(k=0; k<n; ++k) {
            pow = pow*f;
        }
        return pow;
    }

    /* calculate sin of an angle (x is in degrees) */

    float sin(float x) {
      int n; int i; int y; float z; float sinx; float PI;

      PI = 3.14159;
      x = x * (PI / 180.0);
      z = x;
      sinx = x;
      n = 1;

      for (i=0; i<10; ++i) {
        y = 2 * n * (2 * n + 1);
        z = -z * x * x / y;
        sinx = sinx + z;
        ++n;
      }
      return sinx;
    }

    /* calculate cos of an angle (x is in degrees) */

    float cos(float x) {
      int n; int i; int y; float z; float cosx; float PI;

      PI = 3.14159;
      x = x * (PI / 180.0);
      z = 1.0;
      cosx = z;
      n = 1;

      for (i=0; i<10; ++i) {
        y = 2 * n * (2 * n - 1);
        z = -z * x * x / y;
        cosx = cosx + z;
        ++n;
      }
      return cosx;
    }

/*
    Matrix Manipulation Functions
*/

    /* Return 2 dimensional rotation matrix from an angle theta */

    matrix float[2,2] rotation_2D_mat(float theta) {
      matrix float[2,2] m; float cosx; float sinx;

      cosx = cos(theta);
      sinx = sin(theta);

      m[0,0] = cosx;
      m[0,1] = -sinx;
      m[1,0] = sinx;
      m[1,1] = cosx;

      return m;
    }

    /*
        Return 3 dimensional rotation matrix from an angle theta and an axes vector.
        The axes vector is of the form | x | y | z | and determines axis of rotation.
        For example, to rotate about the x axis, simply pass in the vector | 1 | 0 | 0 |
    */

    matrix float[3,3] rotation_3D_mat(float theta, vector int[3] axes) {
      matrix float[3,3] m; float cosx; float sinx;

      cosx = cos(theta);
      sinx = sin(theta);
      m = [0.0, 0.0, 0.0;
           0.0, 0.0, 0.0;
           0.0, 0.0, 0.0];
      if (axes[0] == 1) {
        m[0,0] = 1.0;
        m[1,1] = cosx;
        m[1,2] = -sinx;
        m[2,1] = sinx;
        m[2,2] = cosx;
      }
      else if (axes[1] == 1) {
        m[0,0] = cosx;
        m[0,2] = -sinx;
        m[2,0] = sinx;
        m[2,2] = cosx;
        m[1,1] = 1.0;
      }
      else if (axes[2] == 1) {
        m[0,0] = cosx;
        m[0,1] = -sinx;
        m[1,0] = sinx;
        m[1,1] = cosx;
        m[2,2] = 1.0;
      }
      else {
        print_string("Must specify axis of rotation.");
      }

      return m;
    }

/*
    Matrix Printing Functions
*/

    void printi2(vector int [2] V) {
        int i;
        for(i=0; i < V:len; ++i) {
            print_int(V[i]);
        }
        print_string("");
    }

    void printi3(vector int [3] V) {
        int i;
        for(i=0; i < V:len; ++i) {
            print_int(V[i]);
        }
        print_string("");
    }

    void printi4(vector int [4] V) {
        int i;
        for(i=0; i < V:len; ++i) {
            print_int(V[i]);
        }
        print_string("");
    }

    void printi5(vector int [5] V) {
        int i;
        for(i=0; i < V:len; ++i) {
            print_int(V[i]);
        }
        print_string("");
    }

    void printi6(vector int [6] V) {
        int i;
        for(i=0; i < V:len; ++i) {
            print_int(V[i]);
        }
        print_string("");
    }

    void printi7(vector int [7] V) {
        int i;
        for(i=0; i < V:len; ++i) {
            print_int(V[i]);
        }
        print_string("");
    }

    void printi8(vector int [8] V) {
        int i;
        for(i=0; i < V:len; ++i) {
            print_int(V[i]);
        }
        print_string("");
    }

    void printi9(vector int [9] V) {
        int i;
        for(i=0; i < V:len; ++i) {
            print_int(V[i]);
        }
        print_string("");
    }

    void printf2(vector float [2] V) {
        int i;
        for(i=0; i < V:len; ++i) {
            print_float(V[i]);
        }
        print_string("");
    }

    void printf3(vector float [3] V) {
        int i;
        for(i=0; i < V:len; ++i) {
            print_float(V[i]);
        }
        print_string("");
    }

    void printf4(vector float [4] V) {
        int i;
        for(i=0; i < V:len; ++i) {
            print_float(V[i]);
        }
        print_string("");
    }

    void printf5(vector float [5] V) {
        int i;
        for(i=0; i < V:len; ++i) {
            print_float(V[i]);
        }
        print_string("");
    }

    void printf6(vector float [6] V) {
        int i;
        for(i=0; i < V:len; ++i) {
            print_float(V[i]);
        }
        print_string("");
    }

    void printf7(vector float [7] V) {
        int i;
        for(i=0; i < V:len; ++i) {
            print_float(V[i]);
        }
        print_string("");
    }

    void printf8(vector float [8] V) {
        int i;
        for(i=0; i < V:len; ++i) {
            print_float(V[i]);
        }
        print_string("");
    }

    void printf9(vector float [9] V) {
        int i;
        for(i=0; i < V:len; ++i) {
            print_float(V[i]);
        }
        print_string("");
    }

    void printi22(matrix int [2,2] M) {
        int i;
        int j;
        for(i=0; i < M:rows; ++i) {
            for(j=0; j < M:cols; ++j) {
                print_int(M[i,j]);
            }
            print_string("");
        }
    }

    void printi23(matrix int [2,3] M) {
        int i;
        int j;
        for(i=0; i < M:rows; ++i) {
            for(j=0; j < M:cols; ++j) {
                print_int(M[i,j]);
            }
            print_string("");
        }
    }

    void printi24(matrix int [2,4] M) {
        int i;
        int j;
        for(i=0; i < M:rows; ++i) {
            for(j=0; j < M:cols; ++j) {
                print_int(M[i,j]);
            }
            print_string("");
        }
    }

    void printi25(matrix int [2,5] M) {
        int i;
        int j;
        for(i=0; i < M:rows; ++i) {
            for(j=0; j < M:cols; ++j) {
                print_int(M[i,j]);
            }
            print_string("");
        }
    }

    void printi26(matrix int [2,6] M) {
        int i;
        int j;
        for(i=0; i < M:rows; ++i) {
            for(j=0; j < M:cols; ++j) {
                print_int(M[i,j]);
            }
            print_string("");
        }
    }

    void printi27(matrix int [2,7] M) {
        int i;
        int j;
        for(i=0; i < M:rows; ++i) {
            for(j=0; j < M:cols; ++j) {
                print_int(M[i,j]);
            }
            print_string("");
        }
    }

    void printi28(matrix int [2,8] M) {
        int i;
        int j;
        for(i=0; i < M:rows; ++i) {
            for(j=0; j < M:cols; ++j) {
                print_int(M[i,j]);
            }
            print_string("");
        }
    }

    void printi29(matrix int [2,9] M) {
        int i;
        int j;
        for(i=0; i < M:rows; ++i) {
            for(j=0; j < M:cols; ++j) {
                print_int(M[i,j]);
            }
            print_string("");
        }
    }

    void printi32(matrix int [3,2] M) {
        int i;
        int j;
        for(i=0; i < M:rows; ++i) {
            for(j=0; j < M:cols; ++j) {
                print_int(M[i,j]);
            }
            print_string("");
        }
    }

    void printi33(matrix int [3,3] M) {
        int i;
        int j;
        for(i=0; i < M:rows; ++i) {
            for(j=0; j < M:cols; ++j) {
                print_int(M[i,j]);
            }
            print_string("");
        }
    }

    void printi34(matrix int [3,4] M) {
        int i;
        int j;
        for(i=0; i < M:rows; ++i) {
            for(j=0; j < M:cols; ++j) {
                print_int(M[i,j]);
            }
            print_string("");
        }
    }

    void printi35(matrix int [3,5] M) {
        int i;
        int j;
        for(i=0; i < M:rows; ++i) {
            for(j=0; j < M:cols; ++j) {
                print_int(M[i,j]);
            }
            print_string("");
        }
    }

    void printi36(matrix int [3,6] M) {
        int i;
        int j;
        for(i=0; i < M:rows; ++i) {
            for(j=0; j < M:cols; ++j) {
                print_int(M[i,j]);
            }
            print_string("");
        }
    }

    void printi37(matrix int [3,7] M) {
        int i;
        int j;
        for(i=0; i < M:rows; ++i) {
            for(j=0; j < M:cols; ++j) {
                print_int(M[i,j]);
            }
            print_string("");
        }
    }

    void printi38(matrix int [3,8] M) {
        int i;
        int j;
        for(i=0; i < M:rows; ++i) {
            for(j=0; j < M:cols; ++j) {
                print_int(M[i,j]);
            }
            print_string("");
        }
    }

    void printi39(matrix int [3,9] M) {
        int i;
        int j;
        for(i=0; i < M:rows; ++i) {
            for(j=0; j < M:cols; ++j) {
                print_int(M[i,j]);
            }
            print_string("");
        }
    }

    void printi42(matrix int [4,2] M) {
        int i;
        int j;
        for(i=0; i < M:rows; ++i) {
            for(j=0; j < M:cols; ++j) {
                print_int(M[i,j]);
            }
            print_string("");
        }
    }

    void printi43(matrix int [4,3] M) {
        int i;
        int j;
        for(i=0; i < M:rows; ++i) {
            for(j=0; j < M:cols; ++j) {
                print_int(M[i,j]);
            }
            print_string("");
        }
    }

    void printi44(matrix int [4,4] M) {
        int i;
        int j;
        for(i=0; i < M:rows; ++i) {
            for(j=0; j < M:cols; ++j) {
                print_int(M[i,j]);
            }
            print_string("");
        }
    }

    void printi45(matrix int [4,5] M) {
        int i;
        int j;
        for(i=0; i < M:rows; ++i) {
            for(j=0; j < M:cols; ++j) {
                print_int(M[i,j]);
            }
            print_string("");
        }
    }

    void printi46(matrix int [4,6] M) {
        int i;
        int j;
        for(i=0; i < M:rows; ++i) {
            for(j=0; j < M:cols; ++j) {
                print_int(M[i,j]);
            }
            print_string("");
        }
    }

    void printi47(matrix int [4,7] M) {
        int i;
        int j;
        for(i=0; i < M:rows; ++i) {
            for(j=0; j < M:cols; ++j) {
                print_int(M[i,j]);
            }
            print_string("");
        }
    }

    void printi48(matrix int [4,8] M) {
        int i;
        int j;
        for(i=0; i < M:rows; ++i) {
            for(j=0; j < M:cols; ++j) {
                print_int(M[i,j]);
            }
            print_string("");
        }
    }

    void printi49(matrix int [4,9] M) {
        int i;
        int j;
        for(i=0; i < M:rows; ++i) {
            for(j=0; j < M:cols; ++j) {
                print_int(M[i,j]);
            }
            print_string("");
        }
    }

    void printi52(matrix int [5,2] M) {
        int i;
        int j;
        for(i=0; i < M:rows; ++i) {
            for(j=0; j < M:cols; ++j) {
                print_int(M[i,j]);
            }
            print_string("");
        }
    }

    void printi53(matrix int [5,3] M) {
        int i;
        int j;
        for(i=0; i < M:rows; ++i) {
            for(j=0; j < M:cols; ++j) {
                print_int(M[i,j]);
            }
            print_string("");
        }
    }

    void printi54(matrix int [5,4] M) {
        int i;
        int j;
        for(i=0; i < M:rows; ++i) {
            for(j=0; j < M:cols; ++j) {
                print_int(M[i,j]);
            }
            print_string("");
        }
    }

    void printi55(matrix int [5,5] M) {
        int i;
        int j;
        for(i=0; i < M:rows; ++i) {
            for(j=0; j < M:cols; ++j) {
                print_int(M[i,j]);
            }
            print_string("");
        }
    }

    void printi56(matrix int [5,6] M) {
        int i;
        int j;
        for(i=0; i < M:rows; ++i) {
            for(j=0; j < M:cols; ++j) {
                print_int(M[i,j]);
            }
            print_string("");
        }
    }

    void printi57(matrix int [5,7] M) {
        int i;
        int j;
        for(i=0; i < M:rows; ++i) {
            for(j=0; j < M:cols; ++j) {
                print_int(M[i,j]);
            }
            print_string("");
        }
    }

    void printi58(matrix int [5,8] M) {
        int i;
        int j;
        for(i=0; i < M:rows; ++i) {
            for(j=0; j < M:cols; ++j) {
                print_int(M[i,j]);
            }
            print_string("");
        }
    }

    void printi59(matrix int [5,9] M) {
        int i;
        int j;
        for(i=0; i < M:rows; ++i) {
            for(j=0; j < M:cols; ++j) {
                print_int(M[i,j]);
            }
            print_string("");
        }
    }

    void printi62(matrix int [6,2] M) {
        int i;
        int j;
        for(i=0; i < M:rows; ++i) {
            for(j=0; j < M:cols; ++j) {
                print_int(M[i,j]);
            }
            print_string("");
        }
    }

    void printi63(matrix int [6,3] M) {
        int i;
        int j;
        for(i=0; i < M:rows; ++i) {
            for(j=0; j < M:cols; ++j) {
                print_int(M[i,j]);
            }
            print_string("");
        }
    }

    void printi64(matrix int [6,4] M) {
        int i;
        int j;
        for(i=0; i < M:rows; ++i) {
            for(j=0; j < M:cols; ++j) {
                print_int(M[i,j]);
            }
            print_string("");
        }
    }

    void printi65(matrix int [6,5] M) {
        int i;
        int j;
        for(i=0; i < M:rows; ++i) {
            for(j=0; j < M:cols; ++j) {
                print_int(M[i,j]);
            }
            print_string("");
        }
    }

    void printi66(matrix int [6,6] M) {
        int i;
        int j;
        for(i=0; i < M:rows; ++i) {
            for(j=0; j < M:cols; ++j) {
                print_int(M[i,j]);
            }
            print_string("");
        }
    }

    void printi67(matrix int [6,7] M) {
        int i;
        int j;
        for(i=0; i < M:rows; ++i) {
            for(j=0; j < M:cols; ++j) {
                print_int(M[i,j]);
            }
            print_string("");
        }
    }

    void printi68(matrix int [6,8] M) {
        int i;
        int j;
        for(i=0; i < M:rows; ++i) {
            for(j=0; j < M:cols; ++j) {
                print_int(M[i,j]);
            }
            print_string("");
        }
    }

    void printi69(matrix int [6,9] M) {
        int i;
        int j;
        for(i=0; i < M:rows; ++i) {
            for(j=0; j < M:cols; ++j) {
                print_int(M[i,j]);
            }
            print_string("");
        }
    }

    void printi72(matrix int [7,2] M) {
        int i;
        int j;
        for(i=0; i < M:rows; ++i) {
            for(j=0; j < M:cols; ++j) {
                print_int(M[i,j]);
            }
            print_string("");
        }
    }

    void printi73(matrix int [7,3] M) {
        int i;
        int j;
        for(i=0; i < M:rows; ++i) {
            for(j=0; j < M:cols; ++j) {
                print_int(M[i,j]);
            }
            print_string("");
        }
    }

    void printi74(matrix int [7,4] M) {
        int i;
        int j;
        for(i=0; i < M:rows; ++i) {
            for(j=0; j < M:cols; ++j) {
                print_int(M[i,j]);
            }
            print_string("");
        }
    }

    void printi75(matrix int [7,5] M) {
        int i;
        int j;
        for(i=0; i < M:rows; ++i) {
            for(j=0; j < M:cols; ++j) {
                print_int(M[i,j]);
            }
            print_string("");
        }
    }

    void printi76(matrix int [7,6] M) {
        int i;
        int j;
        for(i=0; i < M:rows; ++i) {
            for(j=0; j < M:cols; ++j) {
                print_int(M[i,j]);
            }
            print_string("");
        }
    }

    void printi77(matrix int [7,7] M) {
        int i;
        int j;
        for(i=0; i < M:rows; ++i) {
            for(j=0; j < M:cols; ++j) {
                print_int(M[i,j]);
            }
            print_string("");
        }
    }

    void printi78(matrix int [7,8] M) {
        int i;
        int j;
        for(i=0; i < M:rows; ++i) {
            for(j=0; j < M:cols; ++j) {
                print_int(M[i,j]);
            }
            print_string("");
        }
    }

    void printi79(matrix int [7,9] M) {
        int i;
        int j;
        for(i=0; i < M:rows; ++i) {
            for(j=0; j < M:cols; ++j) {
                print_int(M[i,j]);
            }
            print_string("");
        }
    }

    void printi82(matrix int [8,2] M) {
        int i;
        int j;
        for(i=0; i < M:rows; ++i) {
            for(j=0; j < M:cols; ++j) {
                print_int(M[i,j]);
            }
            print_string("");
        }
    }

    void printi83(matrix int [8,3] M) {
        int i;
        int j;
        for(i=0; i < M:rows; ++i) {
            for(j=0; j < M:cols; ++j) {
                print_int(M[i,j]);
            }
            print_string("");
        }
    }

    void printi84(matrix int [8,4] M) {
        int i;
        int j;
        for(i=0; i < M:rows; ++i) {
            for(j=0; j < M:cols; ++j) {
                print_int(M[i,j]);
            }
            print_string("");
        }
    }

    void printi85(matrix int [8,5] M) {
        int i;
        int j;
        for(i=0; i < M:rows; ++i) {
            for(j=0; j < M:cols; ++j) {
                print_int(M[i,j]);
            }
            print_string("");
        }
    }

    void printi86(matrix int [8,6] M) {
        int i;
        int j;
        for(i=0; i < M:rows; ++i) {
            for(j=0; j < M:cols; ++j) {
                print_int(M[i,j]);
            }
            print_string("");
        }
    }

    void printi87(matrix int [8,7] M) {
        int i;
        int j;
        for(i=0; i < M:rows; ++i) {
            for(j=0; j < M:cols; ++j) {
                print_int(M[i,j]);
            }
            print_string("");
        }
    }

    void printi88(matrix int [8,8] M) {
        int i;
        int j;
        for(i=0; i < M:rows; ++i) {
            for(j=0; j < M:cols; ++j) {
                print_int(M[i,j]);
            }
            print_string("");
        }
    }

    void printi89(matrix int [8,9] M) {
        int i;
        int j;
        for(i=0; i < M:rows; ++i) {
            for(j=0; j < M:cols; ++j) {
                print_int(M[i,j]);
            }
            print_string("");
        }
    }

    void printi92(matrix int [9,2] M) {
        int i;
        int j;
        for(i=0; i < M:rows; ++i) {
            for(j=0; j < M:cols; ++j) {
                print_int(M[i,j]);
            }
            print_string("");
        }
    }

    void printi93(matrix int [9,3] M) {
        int i;
        int j;
        for(i=0; i < M:rows; ++i) {
            for(j=0; j < M:cols; ++j) {
                print_int(M[i,j]);
            }
            print_string("");
        }
    }

    void printi94(matrix int [9,4] M) {
        int i;
        int j;
        for(i=0; i < M:rows; ++i) {
            for(j=0; j < M:cols; ++j) {
                print_int(M[i,j]);
            }
            print_string("");
        }
    }

    void printi95(matrix int [9,5] M) {
        int i;
        int j;
        for(i=0; i < M:rows; ++i) {
            for(j=0; j < M:cols; ++j) {
                print_int(M[i,j]);
            }
            print_string("");
        }
    }

    void printi96(matrix int [9,6] M) {
        int i;
        int j;
        for(i=0; i < M:rows; ++i) {
            for(j=0; j < M:cols; ++j) {
                print_int(M[i,j]);
            }
            print_string("");
        }
    }

    void printi97(matrix int [9,7] M) {
        int i;
        int j;
        for(i=0; i < M:rows; ++i) {
            for(j=0; j < M:cols; ++j) {
                print_int(M[i,j]);
            }
            print_string("");
        }
    }

    void printi98(matrix int [9,8] M) {
        int i;
        int j;
        for(i=0; i < M:rows; ++i) {
            for(j=0; j < M:cols; ++j) {
                print_int(M[i,j]);
            }
            print_string("");
        }
    }

    void printi99(matrix int [9,9] M) {
        int i;
        int j;
        for(i=0; i < M:rows; ++i) {
            for(j=0; j < M:cols; ++j) {
                print_int(M[i,j]);
            }
            print_string("");
        }
    }

    void printf22(matrix float [2,2] M) {
        int i;
        int j;
        for(i=0; i < M:rows; ++i) {
            for(j=0; j < M:cols; ++j) {
                print_float(M[i,j]);
            }
            print_string("");
        }
    }

    void printf23(matrix float [2,3] M) {
        int i;
        int j;
        for(i=0; i < M:rows; ++i) {
            for(j=0; j < M:cols; ++j) {
                print_float(M[i,j]);
            }
            print_string("");
        }
    }

    void printf24(matrix float [2,4] M) {
        int i;
        int j;
        for(i=0; i < M:rows; ++i) {
            for(j=0; j < M:cols; ++j) {
                print_float(M[i,j]);
            }
            print_string("");
        }
    }

    void printf25(matrix float [2,5] M) {
        int i;
        int j;
        for(i=0; i < M:rows; ++i) {
            for(j=0; j < M:cols; ++j) {
                print_float(M[i,j]);
            }
            print_string("");
        }
    }

    void printf26(matrix float [2,6] M) {
        int i;
        int j;
        for(i=0; i < M:rows; ++i) {
            for(j=0; j < M:cols; ++j) {
                print_float(M[i,j]);
            }
            print_string("");
        }
    }

    void printf27(matrix float [2,7] M) {
        int i;
        int j;
        for(i=0; i < M:rows; ++i) {
            for(j=0; j < M:cols; ++j) {
                print_float(M[i,j]);
            }
            print_string("");
        }
    }

    void printf28(matrix float [2,8] M) {
        int i;
        int j;
        for(i=0; i < M:rows; ++i) {
            for(j=0; j < M:cols; ++j) {
                print_float(M[i,j]);
            }
            print_string("");
        }
    }

    void printf29(matrix float [2,9] M) {
        int i;
        int j;
        for(i=0; i < M:rows; ++i) {
            for(j=0; j < M:cols; ++j) {
                print_float(M[i,j]);
            }
            print_string("");
        }
    }

    void printf32(matrix float [3,2] M) {
        int i;
        int j;
        for(i=0; i < M:rows; ++i) {
            for(j=0; j < M:cols; ++j) {
                print_float(M[i,j]);
            }
            print_string("");
        }
    }

    void printf33(matrix float [3,3] M) {
        int i;
        int j;
        for(i=0; i < M:rows; ++i) {
            for(j=0; j < M:cols; ++j) {
                print_float(M[i,j]);
            }
            print_string("");
        }
    }

    void printf34(matrix float [3,4] M) {
        int i;
        int j;
        for(i=0; i < M:rows; ++i) {
            for(j=0; j < M:cols; ++j) {
                print_float(M[i,j]);
            }
            print_string("");
        }
    }

    void printf35(matrix float [3,5] M) {
        int i;
        int j;
        for(i=0; i < M:rows; ++i) {
            for(j=0; j < M:cols; ++j) {
                print_float(M[i,j]);
            }
            print_string("");
        }
    }

    void printf36(matrix float [3,6] M) {
        int i;
        int j;
        for(i=0; i < M:rows; ++i) {
            for(j=0; j < M:cols; ++j) {
                print_float(M[i,j]);
            }
            print_string("");
        }
    }

    void printf37(matrix float [3,7] M) {
        int i;
        int j;
        for(i=0; i < M:rows; ++i) {
            for(j=0; j < M:cols; ++j) {
                print_float(M[i,j]);
            }
            print_string("");
        }
    }

    void printf38(matrix float [3,8] M) {
        int i;
        int j;
        for(i=0; i < M:rows; ++i) {
            for(j=0; j < M:cols; ++j) {
                print_float(M[i,j]);
            }
            print_string("");
        }
    }

    void printf39(matrix float [3,9] M) {
        int i;
        int j;
        for(i=0; i < M:rows; ++i) {
            for(j=0; j < M:cols; ++j) {
                print_float(M[i,j]);
            }
            print_string("");
        }
    }

    void printf42(matrix float [4,2] M) {
        int i;
        int j;
        for(i=0; i < M:rows; ++i) {
            for(j=0; j < M:cols; ++j) {
                print_float(M[i,j]);
            }
            print_string("");
        }
    }

    void printf43(matrix float [4,3] M) {
        int i;
        int j;
        for(i=0; i < M:rows; ++i) {
            for(j=0; j < M:cols; ++j) {
                print_float(M[i,j]);
            }
            print_string("");
        }
    }

    void printf44(matrix float [4,4] M) {
        int i;
        int j;
        for(i=0; i < M:rows; ++i) {
            for(j=0; j < M:cols; ++j) {
                print_float(M[i,j]);
            }
            print_string("");
        }
    }

    void printf45(matrix float [4,5] M) {
        int i;
        int j;
        for(i=0; i < M:rows; ++i) {
            for(j=0; j < M:cols; ++j) {
                print_float(M[i,j]);
            }
            print_string("");
        }
    }

    void printf46(matrix float [4,6] M) {
        int i;
        int j;
        for(i=0; i < M:rows; ++i) {
            for(j=0; j < M:cols; ++j) {
                print_float(M[i,j]);
            }
            print_string("");
        }
    }

    void printf47(matrix float [4,7] M) {
        int i;
        int j;
        for(i=0; i < M:rows; ++i) {
            for(j=0; j < M:cols; ++j) {
                print_float(M[i,j]);
            }
            print_string("");
        }
    }

    void printf48(matrix float [4,8] M) {
        int i;
        int j;
        for(i=0; i < M:rows; ++i) {
            for(j=0; j < M:cols; ++j) {
                print_float(M[i,j]);
            }
            print_string("");
        }
    }

    void printf49(matrix float [4,9] M) {
        int i;
        int j;
        for(i=0; i < M:rows; ++i) {
            for(j=0; j < M:cols; ++j) {
                print_float(M[i,j]);
            }
            print_string("");
        }
    }

    void printf52(matrix float [5,2] M) {
        int i;
        int j;
        for(i=0; i < M:rows; ++i) {
            for(j=0; j < M:cols; ++j) {
                print_float(M[i,j]);
            }
            print_string("");
        }
    }

    void printf53(matrix float [5,3] M) {
        int i;
        int j;
        for(i=0; i < M:rows; ++i) {
            for(j=0; j < M:cols; ++j) {
                print_float(M[i,j]);
            }
            print_string("");
        }
    }

    void printf54(matrix float [5,4] M) {
        int i;
        int j;
        for(i=0; i < M:rows; ++i) {
            for(j=0; j < M:cols; ++j) {
                print_float(M[i,j]);
            }
            print_string("");
        }
    }

    void printf55(matrix float [5,5] M) {
        int i;
        int j;
        for(i=0; i < M:rows; ++i) {
            for(j=0; j < M:cols; ++j) {
                print_float(M[i,j]);
            }
            print_string("");
        }
    }

    void printf56(matrix float [5,6] M) {
        int i;
        int j;
        for(i=0; i < M:rows; ++i) {
            for(j=0; j < M:cols; ++j) {
                print_float(M[i,j]);
            }
            print_string("");
        }
    }

    void printf57(matrix float [5,7] M) {
        int i;
        int j;
        for(i=0; i < M:rows; ++i) {
            for(j=0; j < M:cols; ++j) {
                print_float(M[i,j]);
            }
            print_string("");
        }
    }

    void printf58(matrix float [5,8] M) {
        int i;
        int j;
        for(i=0; i < M:rows; ++i) {
            for(j=0; j < M:cols; ++j) {
                print_float(M[i,j]);
            }
            print_string("");
        }
    }

    void printf59(matrix float [5,9] M) {
        int i;
        int j;
        for(i=0; i < M:rows; ++i) {
            for(j=0; j < M:cols; ++j) {
                print_float(M[i,j]);
            }
            print_string("");
        }
    }

    void printf62(matrix float [6,2] M) {
        int i;
        int j;
        for(i=0; i < M:rows; ++i) {
            for(j=0; j < M:cols; ++j) {
                print_float(M[i,j]);
            }
            print_string("");
        }
    }

    void printf63(matrix float [6,3] M) {
        int i;
        int j;
        for(i=0; i < M:rows; ++i) {
            for(j=0; j < M:cols; ++j) {
                print_float(M[i,j]);
            }
            print_string("");
        }
    }

    void printf64(matrix float [6,4] M) {
        int i;
        int j;
        for(i=0; i < M:rows; ++i) {
            for(j=0; j < M:cols; ++j) {
                print_float(M[i,j]);
            }
            print_string("");
        }
    }

    void printf65(matrix float [6,5] M) {
        int i;
        int j;
        for(i=0; i < M:rows; ++i) {
            for(j=0; j < M:cols; ++j) {
                print_float(M[i,j]);
            }
            print_string("");
        }
    }

    void printf66(matrix float [6,6] M) {
        int i;
        int j;
        for(i=0; i < M:rows; ++i) {
            for(j=0; j < M:cols; ++j) {
                print_float(M[i,j]);
            }
            print_string("");
        }
    }

    void printf67(matrix float [6,7] M) {
        int i;
        int j;
        for(i=0; i < M:rows; ++i) {
            for(j=0; j < M:cols; ++j) {
                print_float(M[i,j]);
            }
            print_string("");
        }
    }

    void printf68(matrix float [6,8] M) {
        int i;
        int j;
        for(i=0; i < M:rows; ++i) {
            for(j=0; j < M:cols; ++j) {
                print_float(M[i,j]);
            }
            print_string("");
        }
    }

    void printf69(matrix float [6,9] M) {
        int i;
        int j;
        for(i=0; i < M:rows; ++i) {
            for(j=0; j < M:cols; ++j) {
                print_float(M[i,j]);
            }
            print_string("");
        }
    }

    void printf72(matrix float [7,2] M) {
        int i;
        int j;
        for(i=0; i < M:rows; ++i) {
            for(j=0; j < M:cols; ++j) {
                print_float(M[i,j]);
            }
            print_string("");
        }
    }

    void printf73(matrix float [7,3] M) {
        int i;
        int j;
        for(i=0; i < M:rows; ++i) {
            for(j=0; j < M:cols; ++j) {
                print_float(M[i,j]);
            }
            print_string("");
        }
    }

    void printf74(matrix float [7,4] M) {
        int i;
        int j;
        for(i=0; i < M:rows; ++i) {
            for(j=0; j < M:cols; ++j) {
                print_float(M[i,j]);
            }
            print_string("");
        }
    }

    void printf75(matrix float [7,5] M) {
        int i;
        int j;
        for(i=0; i < M:rows; ++i) {
            for(j=0; j < M:cols; ++j) {
                print_float(M[i,j]);
            }
            print_string("");
        }
    }

    void printf76(matrix float [7,6] M) {
        int i;
        int j;
        for(i=0; i < M:rows; ++i) {
            for(j=0; j < M:cols; ++j) {
                print_float(M[i,j]);
            }
            print_string("");
        }
    }

    void printf77(matrix float [7,7] M) {
        int i;
        int j;
        for(i=0; i < M:rows; ++i) {
            for(j=0; j < M:cols; ++j) {
                print_float(M[i,j]);
            }
            print_string("");
        }
    }

    void printf78(matrix float [7,8] M) {
        int i;
        int j;
        for(i=0; i < M:rows; ++i) {
            for(j=0; j < M:cols; ++j) {
                print_float(M[i,j]);
            }
            print_string("");
        }
    }

    void printf79(matrix float [7,9] M) {
        int i;
        int j;
        for(i=0; i < M:rows; ++i) {
            for(j=0; j < M:cols; ++j) {
                print_float(M[i,j]);
            }
            print_string("");
        }
    }

    void printf82(matrix float [8,2] M) {
        int i;
        int j;
        for(i=0; i < M:rows; ++i) {
            for(j=0; j < M:cols; ++j) {
                print_float(M[i,j]);
            }
            print_string("");
        }
    }

    void printf83(matrix float [8,3] M) {
        int i;
        int j;
        for(i=0; i < M:rows; ++i) {
            for(j=0; j < M:cols; ++j) {
                print_float(M[i,j]);
            }
            print_string("");
        }
    }

    void printf84(matrix float [8,4] M) {
        int i;
        int j;
        for(i=0; i < M:rows; ++i) {
            for(j=0; j < M:cols; ++j) {
                print_float(M[i,j]);
            }
            print_string("");
        }
    }

    void printf85(matrix float [8,5] M) {
        int i;
        int j;
        for(i=0; i < M:rows; ++i) {
            for(j=0; j < M:cols; ++j) {
                print_float(M[i,j]);
            }
            print_string("");
        }
    }

    void printf86(matrix float [8,6] M) {
        int i;
        int j;
        for(i=0; i < M:rows; ++i) {
            for(j=0; j < M:cols; ++j) {
                print_float(M[i,j]);
            }
            print_string("");
        }
    }

    void printf87(matrix float [8,7] M) {
        int i;
        int j;
        for(i=0; i < M:rows; ++i) {
            for(j=0; j < M:cols; ++j) {
                print_float(M[i,j]);
            }
            print_string("");
        }
    }

    void printf88(matrix float [8,8] M) {
        int i;
        int j;
        for(i=0; i < M:rows; ++i) {
            for(j=0; j < M:cols; ++j) {
                print_float(M[i,j]);
            }
            print_string("");
        }
    }

    void printf89(matrix float [8,9] M) {
        int i;
        int j;
        for(i=0; i < M:rows; ++i) {
            for(j=0; j < M:cols; ++j) {
                print_float(M[i,j]);
            }
            print_string("");
        }
    }

    void printf92(matrix float [9,2] M) {
        int i;
        int j;
        for(i=0; i < M:rows; ++i) {
            for(j=0; j < M:cols; ++j) {
                print_float(M[i,j]);
            }
            print_string("");
        }
    }

    void printf93(matrix float [9,3] M) {
        int i;
        int j;
        for(i=0; i < M:rows; ++i) {
            for(j=0; j < M:cols; ++j) {
                print_float(M[i,j]);
            }
            print_string("");
        }
    }

    void printf94(matrix float [9,4] M) {
        int i;
        int j;
        for(i=0; i < M:rows; ++i) {
            for(j=0; j < M:cols; ++j) {
                print_float(M[i,j]);
            }
            print_string("");
        }
    }

    void printf95(matrix float [9,5] M) {
        int i;
        int j;
        for(i=0; i < M:rows; ++i) {
            for(j=0; j < M:cols; ++j) {
                print_float(M[i,j]);
            }
            print_string("");
        }
    }

    void printf96(matrix float [9,6] M) {
        int i;
        int j;
        for(i=0; i < M:rows; ++i) {
            for(j=0; j < M:cols; ++j) {
                print_float(M[i,j]);
            }
            print_string("");
        }
    }

    void printf97(matrix float [9,7] M) {
        int i;
        int j;
        for(i=0; i < M:rows; ++i) {
            for(j=0; j < M:cols; ++j) {
                print_float(M[i,j]);
            }
            print_string("");
        }
    }

    void printf98(matrix float [9,8] M) {
        int i;
        int j;
        for(i=0; i < M:rows; ++i) {
            for(j=0; j < M:cols; ++j) {
                print_float(M[i,j]);
            }
            print_string("");
        }
    }

    void printf99(matrix float [9,9] M) {
        int i;
        int j;
        for(i=0; i < M:rows; ++i) {
            for(j=0; j < M:cols; ++j) {
                print_float(M[i,j]);
            }
            print_string("");
        }
    }
